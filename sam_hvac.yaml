id: sync_sam_with_sensors
alias: "Sync Sam HVAC with Desired Temperature and Energy Saving"
description: "Control Sam HVAC with remote sensor, desired temp, and fan-only for efficiency"
trigger:
  - platform: state
    entity_id:
      - sensor.t_h_sensor_temperature  # Remote indoor sensor
      - sensor.sam_outside_temperature  # Outdoor sensor
      - sensor.sam_inside_temperature   # Internal sensor
      - input_number.sam_desired_temperature  # Desired temp
    for:
      seconds: 30  # Debounce
action:
  - choose:
      # Cool Mode: Indoor > 26°C or (outdoor ≥ 25°C and indoor > 20°C)
      - conditions:
          - condition: template
            value_template: >
              {% set remote_indoor = states('sensor.t_h_sensor_temperature') | float %}
              {% set outdoor = states('sensor.sam_outside_temperature') | float %}
              {{ remote_indoor > 26 or (outdoor >= 25 and remote_indoor > 20) }}
        sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: climate.sam
            data:
              hvac_mode: >
                {% set remote = states('sensor.t_h_sensor_temperature') | float %}
                {% set desired = states('input_number.sam_desired_temperature') | float %}
                {% set outdoor = states('sensor.sam_outside_temperature') | float %}
                {{ 'fan_only' if remote > desired + 0.5 and outdoor < desired else 'cool' }}
          - service: climate.set_temperature
            target:
              entity_id: climate.sam
            data:
              temperature: >
                {% set remote = states('sensor.t_h_sensor_temperature') | float %}
                {% set desired = states('input_number.sam_desired_temperature') | float %}
                {% set internal = states('sensor.sam_inside_temperature') | float %}
                {{ internal - 1 if remote > desired + 0.5 else internal }}
              hvac_mode: >
                {% set remote = states('sensor.t_h_sensor_temperature') | float %}
                {% set desired = states('input_number.sam_desired_temperature') | float %}
                {% set outdoor = states('sensor.sam_outside_temperature') | float %}
                {{ 'fan_only' if remote > desired + 0.5 and outdoor < desired else 'cool' }}
      # Heat Mode: Default when not cooling
      - conditions:
          - condition: template
            value_template: >
              {% set remote_indoor = states('sensor.t_h_sensor_temperature') | float %}
              {% set outdoor = states('sensor.sam_outside_temperature') | float %}
              {{ not (remote_indoor > 26 or (outdoor >= 25 and remote_indoor > 20)) }}
        sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: climate.sam
            data:
              hvac_mode: >
                {% set remote = states('sensor.t_h_sensor_temperature') | float %}
                {% set desired = states('input_number.sam_desired_temperature') | float %}
                {% set outdoor = states('sensor.sam_outside_temperature') | float %}
                {{ 'fan_only' if remote < desired - 0.5 and outdoor > desired else 'heat' }}
          - service: climate.set_temperature
            target:
              entity_id: climate.sam
            data:
              temperature: >
                {% set remote = states('sensor.t_h_sensor_temperature') | float %}
                {% set desired = states('input_number.sam_desired_temperature') | float %}
                {% set internal = states('sensor.sam_inside_temperature') | float %}
                {% if remote < desired - 0.5 %}
                  {{ internal + 1 }}
                {% elif remote > desired + 0.5 %}
                  {{ internal - 1 }}
                {% else %}
                  {{ internal }}
                {% endif %}
              hvac_mode: >
                {% set remote = states('sensor.t_h_sensor_temperature') | float %}
                {% set desired = states('input_number.sam_desired_temperature') | float %}
                {% set outdoor = states('sensor.sam_outside_temperature') | float %}
                {{ 'fan_only' if remote < desired - 0.5 and outdoor > desired else 'heat' }}
    default: []
